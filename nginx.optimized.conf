# указывает количество worker-процессов; auto означает автодетект числа CPU/ядер
worker_processes auto;

# максимальное число открытых файлов, которое может обслуживать Nginx
worker_rlimit_nofile 100000;

# файл для логирования ошибок
#error_log  logs/error.log;
# или: #error_log  logs/error.log  notice;

# pid-файл, куда записывается PID мастер-процесса Nginx
#pid        logs/nginx.pid;


events {
    # максимальное количество соединений на один worker-процесс
    worker_connections  4000;

    # использование механизма epoll (эффективен на Linux)
    use epoll;

    # разрешить обработку нескольких новых соединений сразу
    multi_accept on;
}


http {
    # кэширование сведений об открытых файловых дескрипторах (FD) и часто запрашиваемых файлах
    open_file_cache max=200000 inactive=20s;
    open_file_cache_valid 30s;
    open_file_cache_min_uses 2;
    open_file_cache_errors on;

    # отключаем логи запросов (access_log) для ускорения работы на HDD
    access_log off;

    # функция sendfile копирует данные между файловыми дескрипторами внутри ядра,
    # что быстрее, чем read() + write()
    sendfile on;

    # отправка заголовков одним блоком вместо по одному
    tcp_nopush on;

    # выключает буферизацию небольших порций данных (хорошо для мелких запросов в реальном времени)
    tcp_nodelay on;

    # включение сжатия gzip для уменьшения объёма передаваемых данных
    gzip on;
    # gzip_static on; # если есть статические .gz файлы
    gzip_min_length 10240;
    gzip_comp_level 1;
    gzip_vary on;
    gzip_disable msie6;
    gzip_proxied expired no-cache no-store private auth;

    # типы файлов, которые могут сжиматься
    gzip_types
        # text/html сжимается по умолчанию
        text/css
        text/javascript
        text/xml
        text/plain
        text/x-component
        application/javascript
        application/x-javascript
        application/json
        application/xml
        application/rss+xml
        application/atom+xml
        font/truetype
        font/opentype
        application/vnd.ms-fontobject
        image/svg+xml;

    # позволяет серверу сбрасывать "зависшие" соединения и освобождать память
    reset_timedout_connection on;

    # время ожидания тела запроса (client_body_timeout), по умолчанию 60 cек.
    client_body_timeout 10;

    # если клиент перестал отвечать, освободить ресурсы (по умолчанию 60 с)
    send_timeout 2;

    # время жизни keep-alive соединения (по умолчанию 75 cек)
    keepalive_timeout 30;

    # количество запросов, которые клиент может отправить за одно keep-alive соединение
    keepalive_requests 100000;

    server {
        # порт, на котором слушает сервер
        listen       80;
        # имя сервера (домен или IP)
        server_name  localhost;

        # настройка корневой директории и индексных файлов
        location / {
            root   html;
            index  index.html index.htm;
        }

        # страница ошибок
        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   html;
        }
    }
}
